[sdxl_arguments]
cache_text_encoder_outputs = true
no_half_vae = false
min_timestep = 0
max_timestep = 100
shuffle_caption = false

[model_arguments]
pretrained_model_name_or_path = "/data/gongxuan/stable-diffusion-webui/models/Stable-diffusion/sd_xl_base_1.0.safetensors"


[dataset_arguments]
debug_dataset = false
in_json = "/data/gongxuan/sdxl_data/meta_lt.json"
train_data_dir = "/data/gongxuan/sdxl_data/nahida"
dataset_repeats = 10
keep_tokens = 0
resolution = "512,512"
caption_dropout_rate = 0
caption_tag_dropout_rate = 0
caption_dropout_every_n_epochs = 0
color_aug = false
token_warmup_min = 1
token_warmup_step = 0

[training_arguments]
output_dir = "/data/gongxuan/SDXL-Train/outputs/fintune"
output_name = "sdxl_finetune"
save_precision = "fp16"
save_every_n_steps = 200
train_batch_size = 1
max_token_length = 75
mem_eff_attn = true
xformers = true
max_train_steps = 20
max_data_loader_n_workers = 4
persistent_data_loader_workers = false
gradient_checkpointing = true
gradient_accumulation_steps = 4
mixed_precision = "fp16"

[logging_arguments]
log_with = "tensorboard"
logging_dir = "/data/gongxuan/SDXL-Train/content/fine_tune/logs"
log_prefix = "sdxl_finetune"

[sample_prompt_arguments]
sample_every_n_steps = 50
sample_sampler = "euler_a"

[saving_arguments]
save_model_as = "safetensors"

[optimizer_arguments]
optimizer_type = "AdaFactor"
learning_rate = 1e-7
train_text_encoder = false
text_encoder_lr=1e-6
max_grad_norm = 0
optimizer_args = [ "scale_parameter=False", "relative_step=False", "warmup_init=False",]
lr_scheduler = "constant_with_warmup"
lr_warmup_steps = 100

[advanced_training_config]
